from aiogram import Router, F, types
from aiogram.filters import StateFilter
from aiogram.fsm.context import FSMContext

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è, –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –∏ –Ω–∞—à—É –æ—Å–Ω–æ–≤–Ω—É—é –ª–æ–≥–∏–∫—É
from bot.states import UserStates
from bot.keyboards import BotKeyboards
from services.bot_logic import SimpleBotLogic
from data.database import Database
# –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Ä–æ—É—Ç–µ—Ä —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è —ç—Ç–æ–≥–æ —Å—Ü–µ–Ω–∞—Ä–∏—è
router = Router()

# –≠—Ç–æ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ª–æ–≤–∏—Ç –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –∫–æ–∂–∏,
# –Ω–æ –¢–û–õ–¨–ö–û –µ—Å–ª–∏ –±–æ—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ "–æ–∂–∏–¥–∞–Ω–∏—è —Ç–∏–ø–∞ –∫–æ–∂–∏".
@router.callback_query(StateFilter(UserStates.waiting_for_skin_type), F.data.startswith("skin_"))
async def skin_type_selected(callback: types.CallbackQuery, state: FSMContext):
    """–®–∞–≥ 1: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª —Ç–∏–ø –∫–æ–∂–∏."""
    skin_type = callback.data.replace("skin_", "")
    await state.update_data(skin_type=skin_type)

    # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å —Å—Ç–∞—Ä—ã–µ –∫–Ω–æ–ø–∫–∏ –∏ –∑–∞–¥–∞—Ç—å –Ω–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å
    await callback.message.edit_text(
        "üë§ –°–ø–∞—Å–∏–±–æ! –¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç:",
        reply_markup=BotKeyboards.age_group_menu()
    )
    # –ü–µ—Ä–µ–≤–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥ —Å—Ü–µ–Ω–∞—Ä–∏—è
    await state.set_state(UserStates.waiting_for_age)
    await callback.answer() # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ –∫–æ–ª–±—ç–∫, —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å "—á–∞—Å–∏–∫–∏"


# –≠—Ç–æ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ª–æ–≤–∏—Ç –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –≤—ã–±–æ—Ä–∞ –≤–æ–∑—Ä–∞—Å—Ç–∞,
# –Ω–æ –¢–û–õ–¨–ö–û –µ—Å–ª–∏ –±–æ—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ "–æ–∂–∏–¥–∞–Ω–∏—è –≤–æ–∑—Ä–∞—Å—Ç–∞".
@router.callback_query(StateFilter(UserStates.waiting_for_age), F.data.startswith("age_"))
async def age_selected(callback: types.CallbackQuery, state: FSMContext):
    """–®–∞–≥ 2: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª –≤–æ–∑—Ä–∞—Å—Ç."""
    age_group = callback.data.replace("age_", "")
    await state.update_data(age_group=age_group)

    await callback.message.edit_text(
        """üìù –û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –∫—Ä–∞—Ç–∫–æ –æ–ø–∏—à–∏—Ç–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –∏–ª–∏ —Ç–æ, —á—Ç–æ –≤–∞—Å –±–µ—Å–ø–æ–∫–æ–∏—Ç.

–ù–∞–ø—Ä–∏–º–µ—Ä: <i>"–ü–æ—è–≤–∏–ª–∏—Å—å –º–µ–ª–∫–∏–µ –º–æ—Ä—â–∏–Ω–∫–∏ –≤–æ–∫—Ä—É–≥ –≥–ª–∞–∑, —Ç—É—Å–∫–ª—ã–π —Ü–≤–µ—Ç –ª–∏—Ü–∞"</i>.
–ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –∫–æ–∂–∏ üì∏"""
    )
    # –ü–µ—Ä–µ–≤–æ–¥–∏–º –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥
    await state.set_state(UserStates.waiting_for_problem_description)
    await callback.answer()

# –≠—Ç–æ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ª–æ–≤–∏—Ç —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ,
# –Ω–æ –¢–û–õ–¨–ö–û –µ—Å–ª–∏ –±–æ—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ "–æ–∂–∏–¥–∞–Ω–∏—è –æ–ø–∏—Å–∞–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã".
@router.message(StateFilter(UserStates.waiting_for_problem_description))
async def problem_description_handler(message: types.Message, state: FSMContext, bot_logic: SimpleBotLogic, database: Database):
    """–®–∞–≥ 3: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏—Å–ª–∞–ª –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã. –§–∏–Ω–∞–ª —Å—Ü–µ–Ω–∞—Ä–∏—è."""
    user_data = await state.get_data()

    # –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å –≤ —Å–µ—Å—Å–∏–∏ –∏ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö (–∫–∞–∫ –≤ –≤–∞—à–µ–º –∫–æ–¥–µ)
    # –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    profile_data = {
        "skin_type": user_data.get("skin_type"),
        "age_group": user_data.get("age_group")
    }
    await database.update_user_profile(message.from_user.id, profile_data)

    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–µ—Å—Å–∏—é
    user_session = await bot_logic.session_manager.get_user_session(message.from_user.id)
    user_session["user_profile"] = {
        **user_session.get("user_profile", {}),
        **profile_data,
        "problems_description": message.text
    }
    await bot_logic.session_manager.update_user_session(message.from_user.id, user_session)

    # –§–æ—Ä–º–∏—Ä—É–µ–º —É–º–Ω—ã–π –∑–∞–ø—Ä–æ—Å –¥–ª—è RAG
    enhanced_query = f"""
    –î–∞–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é –ø–æ –ø—Ä–æ—Ü–µ–¥—É—Ä–∞–º.
    –¢–∏–ø –∫–æ–∂–∏ –∫–ª–∏–µ–Ω—Ç–∞: {user_data.get('skin_type', '–Ω–µ —É–∫–∞–∑–∞–Ω')}
    –í–æ–∑—Ä–∞—Å—Ç–Ω–∞—è –≥—Ä—É–ø–ø–∞: {user_data.get('age_group', '–Ω–µ —É–∫–∞–∑–∞–Ω–∞')}
    –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞: {message.text}
    """

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º, —á—Ç–æ –±–æ—Ç "–¥—É–º–∞–µ—Ç"
    await message.answer("üîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –∏ –ø–æ–¥–±–∏—Ä–∞—é –ª—É—á—à–∏–µ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã. –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥...")

    # –í—ã–∑—ã–≤–∞–µ–º –Ω–∞—à—É –æ—Å–Ω–æ–≤–Ω—É—é –ª–æ–≥–∏–∫—É
    response, _ = await bot_logic.process_message(message.from_user.id, enhanced_query)

    await message.bot.send_chat_action(message.chat.id, "typing")
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –¥–∏–Ω–∞–º–∏—á–µ—Å–∫—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –Ω–∞ –æ—Å–Ω–æ–≤–µ –æ—Ç–≤–µ—Ç–∞ –±–æ—Ç–∞
    dynamic_keyboard = BotKeyboards.create_dynamic_booking_keyboard(response)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    await message.answer(
        f"‚úÖ <b>–ì–æ—Ç–æ–≤–æ! –í–æ—Ç –º–æ–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏:</b>\n\n{response}",
        reply_markup=dynamic_keyboard
    )

    # –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –∑–∞–≤–µ—Ä—à–∞—è —Å—Ü–µ–Ω–∞—Ä–∏–π
    await state.clear()