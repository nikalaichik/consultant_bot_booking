from aiogram import Router, F, types
from services.bot_logic import SimpleBotLogic
from bot.keyboards import BotKeyboards
from utils.security import sanitize_for_model
from utils.rate_limiter import rate_limit
import logging
from datetime import datetime

logger = logging.getLogger(__name__)

router = Router()

# –≠—Ç–æ—Ç —Ö–µ–Ω–¥–ª–µ—Ä –ª–æ–≤–∏—Ç –ª—é–±—ã–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –Ω–µ –ø–æ–¥–æ—à–µ–¥—à–∏–µ –ø–æ–¥ —Ñ–∏–ª—å—Ç—Ä—ã –≤—ã—à–µ.
@router.message(F.text)
@rate_limit("text")
async def general_message_handler(message: types.Message, bot_logic: SimpleBotLogic):
    await message.bot.send_chat_action(message.chat.id, "typing")
    # –æ—á–∏—â–∞–µ–º –≤–≤–æ–¥ –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ–¥–∞—á–µ–π –≤ –ª–æ–≥–∏–∫—É
    clean_text = sanitize_for_model(message.text)
    try:
        response, metadata = await bot_logic.process_message(
            user_id=message.from_user.id,
            message=clean_text
        )
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω—É–∂–Ω–∞ –ª–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
        keyboard = None
        intent = metadata.get("intent")

        if intent == "booking":
            keyboard = BotKeyboards.procedures_menu()
        elif intent == "consultation":
            keyboard = BotKeyboards.booking_menu()
        elif intent == "emergency":
            # –ù–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É, –∞ —É–≤–µ–¥–æ–º–ª—è–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
            if bot_logic.config.ADMIN_USER_ID:
                admin_alert = f"""üö® –≠–ö–°–¢–†–ï–ù–ù–ê–Ø –°–ò–¢–£–ê–¶–ò–Ø

üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {message.from_user.full_name}
üì± @{message.from_user.username or '–Ω–µ —É–∫–∞–∑–∞–Ω'}
üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ: {message.text}
‚è∞ {datetime.now().strftime('%H:%M %d.%m.%Y')}

–ö–ª–∏–µ–Ω—Ç –æ–±—Ä–∞—Ç–∏–ª—Å—è –∑–∞ —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–π –ø–æ–º–æ—â—å—é!"""

                try:
                    await message.bot.send_message(bot_logic.config.ADMIN_USER_ID, admin_alert)
                except Exception as e:
                    logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–≤–µ–¥–æ–º–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –æ–± —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏: {e}")

            # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –Ω–µ –ø—Ä–∏–∫—Ä–µ–ø–ª—è–µ—Ç—Å—è ‚Äî keyboard –æ—Å—Ç–∞—ë—Ç—Å—è None
            keyboard = None

        await message.answer(response, reply_markup=keyboard)

    except Exception as e:
        logger.exception(f"–û—à–∏–±–∫–∞ –≤ general_message_handler: {e}")
        await message.answer(
            "üòî –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É.",
            reply_markup=BotKeyboards.contact_menu()
        )