from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton
from config import Config
from datetime import datetime
import re
import pytz

tz = pytz.timezone(Config.TIMEZONE)

class BotKeyboards:
    @staticmethod
    def main_menu() -> ReplyKeyboardMarkup:
        """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
        return ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="üí¨ –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è"), KeyboardButton(text="üìÖ –ó–∞–ø–∏—Å–∞—Ç—å—Å—è")],
                [KeyboardButton(text="üí∞ –¶–µ–Ω—ã"), KeyboardButton(text="üè• –û –∫–ª–∏–Ω–∏–∫–µ")],
                [KeyboardButton(text="üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã"), KeyboardButton(text="‚ùì –ü–æ–º–æ—â—å")],
                [KeyboardButton(text="üîî –ú–æ–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è"), KeyboardButton(text="–ú–æ–∏ –∑–∞–ø–∏—Å–∏")]

            ],
            resize_keyboard=True
        )

    @staticmethod
    def skin_type_menu() -> InlineKeyboardMarkup:
        """–í—ã–±–æ—Ä —Ç–∏–ø–∞ –∫–æ–∂–∏"""
        return InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üåø –ù–æ—Ä–º–∞–ª—å–Ω–∞—è", callback_data="skin_normal")],
            [InlineKeyboardButton(text="üíß –°—É—Ö–∞—è", callback_data="skin_dry")],
            [InlineKeyboardButton(text="‚ú® –ñ–∏—Ä–Ω–∞—è", callback_data="skin_oily")],
            [InlineKeyboardButton(text="üîÑ –ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–∞—è", callback_data="skin_combination")],
            [InlineKeyboardButton(text="üå∏ –ß—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞—è", callback_data="skin_sensitive")]
        ])

    @staticmethod
    def age_group_menu() -> InlineKeyboardMarkup:
        """–í—ã–±–æ—Ä –≤–æ–∑—Ä–∞—Å—Ç–∞"""
        return InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üëß –î–æ 18", callback_data="age_teen")],
            [InlineKeyboardButton(text="üë© 18-30", callback_data="age_young")],
            [InlineKeyboardButton(text="üë©‚Äçüíº 30-45", callback_data="age_adult")],
            [InlineKeyboardButton(text="üë©‚Äçü¶≥ 45+", callback_data="age_mature")]
        ])

    @staticmethod
    def procedures_menu() -> InlineKeyboardMarkup:
        """–ú–µ–Ω—é –ø—Ä–æ—Ü–µ–¥—É—Ä"""
        return InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üßº –ß–∏—Å—Ç–∫–∞ –ª–∏—Ü–∞", callback_data="proc_cleaning")],
            [InlineKeyboardButton(text="üí® –ö–∞—Ä–±–æ–∫—Å–∏—Ç–µ—Ä–∞–ø–∏—è", callback_data="proc_carboxy")],
            [InlineKeyboardButton(text="üéØ –ú–∏–∫—Ä–æ–Ω–∏–¥–ª–∏–Ω–≥", callback_data="proc_microneedling")],
            [InlineKeyboardButton(text="üëê –ú–∞—Å—Å–∞–∂–∏", callback_data="proc_massage")],
            [InlineKeyboardButton(text="üîÑ –ú–µ–∑–æ–ø–∏–ª–∏–Ω–≥", callback_data="proc_mesopeel")],
            [InlineKeyboardButton(text="üí¨ –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è", callback_data="proc_consultation")]
        ])

    @staticmethod
    def consultation_next_steps() -> InlineKeyboardMarkup:
        """–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏ –ø–æ—Å–ª–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏"""
        return InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üìÖ –ó–∞–ø–∏—Å–∞—Ç—å—Å—è", callback_data="book_consultation")],
            [InlineKeyboardButton(text="üí∞ –£–∑–Ω–∞—Ç—å —Ü–µ–Ω—ã", callback_data="get_prices")]
        ])

    @staticmethod
    def procedure_booking_menu(procedure: str) -> InlineKeyboardMarkup:
        """–ú–µ–Ω—é –∑–∞–ø–∏—Å–∏ –Ω–∞ –ø—Ä–æ—Ü–µ–¥—É—Ä—É"""
        return InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üìÖ –ó–∞–ø–∏—Å–∞—Ç—å—Å—è", callback_data=f"book_{procedure}")],
            [InlineKeyboardButton(text="‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å", callback_data=f"ask_{procedure}")],
            [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_procedures")]
        ])

    @staticmethod
    def emergency_menu() -> InlineKeyboardMarkup:
        """–ú–µ–Ω—é —ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏–π"""
        return InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üî• –í–æ—Å–ø–∞–ª–µ–Ω–∏–µ", callback_data="emergency_inflammation")],
            [InlineKeyboardButton(text="üò∞ –ê–ª–ª–µ—Ä–≥–∏—è", callback_data="emergency_allergy")],
            [InlineKeyboardButton(text="üò® –ë–æ–ª—å", callback_data="emergency_pain")],
            [InlineKeyboardButton(text="üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –≤—Ä–∞—á–æ–º", callback_data="emergency_doctor")]
        ])

    @staticmethod
    def contact_menu() -> InlineKeyboardMarkup:
        raw_phone = Config.CLINIC_PHONE
        clean_phone = re.sub(r'[^\d+]', '', raw_phone)
        if clean_phone.count('+') > 1:
            clean_phone = '+' + clean_phone.replace('+', '')
        # –ï—Å–ª–∏ –Ω–µ—Ç –ø–ª—é—Å–∞, –¥–æ–±–∞–≤–ª—è–µ–º (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
        if not clean_phone.startswith('+'):
            clean_phone = '+' + clean_phone

        """–ö–æ–Ω—Ç–∞–∫—Ç–Ω–æ–µ –º–µ–Ω—é"""
        return InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üí¨ WhatsApp", url=f"https://wa.me/{clean_phone}")],
            [InlineKeyboardButton(text="üìç –ê–¥—Ä–µ—Å", callback_data="show_address")]
        ])

    @staticmethod
    def admin_menu(show_all_bookings: bool = False) -> InlineKeyboardMarkup:
        """–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–µ –º–µ–Ω—é"""
        buttons = [
            [InlineKeyboardButton(text="üìã –í—Å–µ –∑–∞—è–≤–∫–∏", callback_data="admin_all_bookings")] if show_all_bookings else [],
            [InlineKeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="admin_stats")],
            [InlineKeyboardButton(text="üì¢ –†–∞—Å—Å—ã–ª–∫–∞", callback_data="admin_broadcast")],
            [InlineKeyboardButton(text="üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –ë–ó", callback_data="admin_reload_kb")]
        ]
        # —É–±–∏—Ä–∞–µ–º –ø—É—Å—Ç—ã–µ
        buttons = [row for row in buttons if row]
        return InlineKeyboardMarkup(inline_keyboard=buttons)


    @staticmethod
    def booking_menu() -> InlineKeyboardMarkup:
        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–µ –º–µ–Ω—é –î–∞/–ù–µ—Ç"""
        return InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(text="‚úÖ –ó–∞–ø–∏—Å–∞—Ç—å—Å—è", callback_data="booking"),
            ]
        ])

    @staticmethod
    def prices_menu() -> InlineKeyboardMarkup:
        """–ú–µ–Ω—é –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Ü–µ–Ω"""
        return InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üßº –ß–∏—Å—Ç–∫–∞ –ª–∏—Ü–∞", callback_data="price_cleaning")],
            [InlineKeyboardButton(text="üí® –ö–∞—Ä–±–æ–∫—Å–∏—Ç–µ—Ä–∞–ø–∏—è", callback_data="price_carboxy")],
            [InlineKeyboardButton(text="üéØ –ú–∏–∫—Ä–æ–Ω–∏–¥–ª–∏–Ω–≥", callback_data="price_microneedling")],
            [InlineKeyboardButton(text="üîÑ –ú–µ–∑–æ–ø–∏–ª–∏–Ω–≥", callback_data="price_mesopeel")],
            [InlineKeyboardButton(text="üëê –ú–∞—Å—Å–∞–∂–∏", callback_data="price_massage")],
            [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_main")]
        ])

    @staticmethod
    def create_dynamic_booking_keyboard(recommendation_text: str) -> InlineKeyboardMarkup:
        """
        –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—Å—Ç–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –æ—Ç –±–æ—Ç–∞.
        –ù–∞—Ö–æ–¥–∏—Ç –≤ —Ç–µ–∫—Å—Ç–µ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è –ø—Ä–æ—Ü–µ–¥—É—Ä –∏ –¥–µ–ª–∞–µ—Ç –¥–ª—è –Ω–∏—Ö –∫–Ω–æ–ø–∫–∏.
        """
        recommendation_text = recommendation_text.lower()
        buttons = []

        # –°–ª–æ–≤–∞—Ä—å: —á—Ç–æ –∏—â–µ–º –≤ —Ç–µ–∫—Å—Ç–µ -> –∫–∞–∫–æ–π callback_data —Å—Ç–∞–≤–∏–º
        procedure_map = {
            "—á–∏—Å—Ç–∫–∞ –ª–∏—Ü–∞": "book_cleaning",
            "–∫–∞—Ä–±–æ–∫—Å–∏—Ç–µ—Ä–∞–ø–∏—è": "book_carboxy",
            "–º–∏–∫—Ä–æ–Ω–∏–¥–ª–∏–Ω–≥": "book_microneedling",
            "–º–∞—Å—Å–∞–∂": "book_massage",
            "–º–µ–∑–æ–ø–∏–ª–∏–Ω–≥": "book_mesopeel"
        }

        # –ò—â–µ–º —É–ø–æ–º–∏–Ω–∞–Ω–∏—è –ø—Ä–æ—Ü–µ–¥—É—Ä –≤ —Ç–µ–∫—Å—Ç–µ
        for keyword, callback_data in procedure_map.items():
            if keyword in recommendation_text:
                # –ù–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –±–µ—Ä–µ–º –∏–∑ —Å–ª–æ–≤–∞—Ä—è procedure_names –≤ fsm_booking
                # –ò–ª–∏ –º–æ–∂–Ω–æ –∑–∞–≤–µ—Å—Ç–∏ —Å–≤–æ–π —Å–ª–æ–≤–∞—Ä—å –∑–¥–µ—Å—å
                procedure_name = {
                    "book_cleaning": "üßº –ß–∏—Å—Ç–∫–∞ –ª–∏—Ü–∞",
                    "book_carboxy": "üí® –ö–∞—Ä–±–æ–∫—Å–∏—Ç–µ—Ä–∞–ø–∏—è",
                    "book_microneedling": "üéØ –ú–∏–∫—Ä–æ–Ω–∏–¥–ª–∏–Ω–≥",
                    "book_massage": "üëê –ú–∞—Å—Å–∞–∂",
                    "book_mesopeel": "üîÑ –ú–µ–∑–æ–ø–∏–ª–∏–Ω–≥"
                }.get(callback_data, "–ü—Ä–æ—Ü–µ–¥—É—Ä–∞")

                buttons.append([InlineKeyboardButton(text=f"–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ {procedure_name}", callback_data=callback_data)])

        # –í—Å–µ–≥–¥–∞ –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –æ–±—â–µ–π –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏
        buttons.append([InlineKeyboardButton(text="üìÖ –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é", callback_data="book_consultation")])

        if not buttons:
            # –ï—Å–ª–∏ –≤–¥—Ä—É–≥ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞—à–ª–∏, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –º–µ–Ω—é
            return BotKeyboards.consultation_next_steps()

        return InlineKeyboardMarkup(inline_keyboard=buttons)

    @staticmethod
    def booking_selection_menu() -> InlineKeyboardMarkup:
        """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã –¥–ª—è –∑–∞–ø–∏—Å–∏."""
        return InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üßº –ß–∏—Å—Ç–∫–∞ –ª–∏—Ü–∞", callback_data="book_cleaning")],
            [InlineKeyboardButton(text="üí® –ö–∞—Ä–±–æ–∫—Å–∏—Ç–µ—Ä–∞–ø–∏—è", callback_data="book_carboxy")],
            [InlineKeyboardButton(text="üéØ –ú–∏–∫—Ä–æ–Ω–∏–¥–ª–∏–Ω–≥", callback_data="book_microneedling")],
            [InlineKeyboardButton(text="üëê –ú–∞—Å—Å–∞–∂", callback_data="book_massage")],
            [InlineKeyboardButton(text="üîÑ –ú–µ–∑–æ–ø–∏–ª–∏–Ω–≥", callback_data="book_mesopeel")],
            [InlineKeyboardButton(text="üí¨ –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è", callback_data="book_consultation")],
        ])

    @staticmethod
    def booking_confirmation_menu() -> InlineKeyboardMarkup:
        """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏ –Ω–∞ –ø—Ä–æ—Ü–µ–¥—É—Ä—É."""
        return InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∏ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è", callback_data="confirm_booking"),
                InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel_booking")
            ]
        ])

    @staticmethod
    def after_cancel_booking_menu() -> InlineKeyboardMarkup:
        """
        –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞, –ø—Ä–µ–¥–ª–∞–≥–∞—é—â–∞—è –¥–µ–π—Å—Ç–≤–∏—è –ø–æ—Å–ª–µ –æ—Ç–º–µ–Ω—ã –∑–∞–ø–∏—Å–∏.
        """
        return InlineKeyboardMarkup(inline_keyboard=[
            [
                # –≠—Ç–∞ –∫–Ω–æ–ø–∫–∞ –ø–æ–∫–∞–∂–µ—Ç —Å–ø–∏—Å–æ–∫ –ø—Ä–æ—Ü–µ–¥—É—Ä –¥–ª—è –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å–∏
                InlineKeyboardButton(text="üìÖ –í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é –ø—Ä–æ—Ü–µ–¥—É—Ä—É", callback_data="restart_booking"),
            ],
            [
                # –≠—Ç–∞ –∫–Ω–æ–ø–∫–∞ –ø—Ä–æ—Å—Ç–æ –∑–∞–∫—Ä–æ–µ—Ç —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–¥–ª—è —á–∏—Å—Ç–æ—Ç—ã)
                InlineKeyboardButton(text="‚¨ÖÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_main_menu"),
            ]
        ])

    @staticmethod
    def reminders_menu() -> InlineKeyboardMarkup:
        """–ú–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è–º–∏"""
        return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üìã –ú–æ–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è", callback_data="my_reminders")],
        [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_main")]
    ])

    @staticmethod
    def build_bookings_keyboard(events: list) -> InlineKeyboardMarkup:
        """–°–æ–∑–¥–∞—ë—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∑–∞–ø–∏—Å—è–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
        buttons = []
        for e in events:
            start_str = e["start"].get("dateTime", e["start"].get("date"))
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º fromisoformat –∏ —É–∫–∞–∑—ã–≤–∞–µ–º —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å UTC
            # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å—Ç—Ä–æ–∫—É –∏–∑ UTC –≤ –æ–±—ä–µ–∫—Ç datetime
            utc_dt = datetime.fromisoformat(start_str.replace("Z", "+00:00"))
             # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ –ª–æ–∫–∞–ª—å–Ω—ã–π —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å
            local_dt = utc_dt.astimezone(tz)

            # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —É–∂–µ –ª–æ–∫–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è
            dt_str = local_dt.strftime("%d.%m %H:%M")

            title = e.get("summary", "–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è")
            buttons.append(
                [InlineKeyboardButton(text=f"{dt_str} ‚Äî {title}", callback_data=f"choose_cancel:{e['id']}")]
            )
        if not buttons:
            buttons = [[InlineKeyboardButton(text="–ù–µ—Ç –∑–∞–ø–∏—Å–µ–π", callback_data="noop")]]
        return InlineKeyboardMarkup(inline_keyboard=buttons)

    @staticmethod
    def confirm_keyboard(event_id: str) -> InlineKeyboardMarkup:
        """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç–º–µ–Ω—ã."""
        return InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(text="‚úÖ –î–∞, –æ—Ç–º–µ–Ω–∏—Ç—å", callback_data=f"confirm_cancel:{event_id}"),
                InlineKeyboardButton(text="‚ùå –ù–µ—Ç", callback_data="cancel_back")
            ]
        ])